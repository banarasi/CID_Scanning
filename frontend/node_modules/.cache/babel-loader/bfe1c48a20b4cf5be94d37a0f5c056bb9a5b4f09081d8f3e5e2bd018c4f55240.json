{"ast":null,"code":"var _jsxFileName = \"C:\\\\AI_Apps\\\\CID_Scanning\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\n\n// Helper function to format redaction stats\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatRedactionStats = stats => {\n  if (!stats) return null;\n\n  // Filter out zero counts\n  const nonZeroStats = Object.entries(stats).filter(([_, count]) => count > 0).sort((a, b) => b[1] - a[1]); // Sort by count (descending)\n\n  if (nonZeroStats.length === 0) return 'No sensitive information detected';\n  return nonZeroStats.map(([type, count]) => {\n    // Format the type name for display\n    const formattedType = type.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n    return `${formattedType}: ${count}`;\n  }).join(', ');\n};\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [redactedText, setRedactedText] = useState(null);\n  const [redactionStats, setRedactionStats] = useState(null);\n  const [totalRedactions, setTotalRedactions] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n    setError(null);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!file) {\n      setError('Please select a PDF file');\n      return;\n    }\n    setLoading(true);\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await fetch('http://localhost:8001/api/redact-pdf', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setRedactedText(data.redacted_text);\n        setRedactionStats(data.redaction_stats);\n        setTotalRedactions(data.total_redactions);\n      }\n    } catch (err) {\n      setError('Failed to process the PDF');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"PDF Redaction Tool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".pdf\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !file || loading,\n          children: loading ? 'Processing...' : 'Redact PDF'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }, this), redactedText && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results\",\n        children: [totalRedactions && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"redaction-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Redaction Summary:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"redaction-stats\",\n            children: formatRedactionStats(totalRedactions) || 'No sensitive information detected'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"redaction-info\",\n            children: \"The system has scanned for and redacted: personal names, email addresses, phone numbers, social security numbers, credit card numbers, dates, addresses, company names, financial information, IDs (passports, driver's licenses), and network information (IP addresses).\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Redacted Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), redactedText.map((page, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Page \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), redactionStats && redactionStats[index] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page-stats\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Page Redactions:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 24\n              }, this), \" \", formatRedactionStats(redactionStats[index])]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: page\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"A9c2180yeukVz2p+R/eqJKN1cr0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","formatRedactionStats","stats","nonZeroStats","Object","entries","filter","_","count","sort","a","b","length","map","type","formattedType","replace","l","toUpperCase","join","App","_s","file","setFile","redactedText","setRedactedText","redactionStats","setRedactionStats","totalRedactions","setTotalRedactions","loading","setLoading","error","setError","handleFileChange","event","target","files","handleSubmit","preventDefault","formData","FormData","append","response","fetch","method","body","data","json","redacted_text","redaction_stats","total_redactions","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","accept","onChange","disabled","page","index","_c","$RefreshReg$"],"sources":["C:/AI_Apps/CID_Scanning/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n// Helper function to format redaction stats\nconst formatRedactionStats = (stats) => {\n  if (!stats) return null;\n\n  // Filter out zero counts\n  const nonZeroStats = Object.entries(stats)\n    .filter(([_, count]) => count > 0)\n    .sort((a, b) => b[1] - a[1]); // Sort by count (descending)\n\n  if (nonZeroStats.length === 0) return 'No sensitive information detected';\n\n  return nonZeroStats.map(([type, count]) => {\n    // Format the type name for display\n    const formattedType = type\n      .replace(/_/g, ' ')\n      .replace(/\\b\\w/g, l => l.toUpperCase());\n\n    return `${formattedType}: ${count}`;\n  }).join(', ');\n};\n\nfunction App() {\n  const [file, setFile] = useState(null);\n  const [redactedText, setRedactedText] = useState(null);\n  const [redactionStats, setRedactionStats] = useState(null);\n  const [totalRedactions, setTotalRedactions] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n    setError(null);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (!file) {\n      setError('Please select a PDF file');\n      return;\n    }\n\n    setLoading(true);\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const response = await fetch('http://localhost:8001/api/redact-pdf', {\n        method: 'POST',\n        body: formData,\n      });\n\n      const data = await response.json();\n\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setRedactedText(data.redacted_text);\n        setRedactionStats(data.redaction_stats);\n        setTotalRedactions(data.total_redactions);\n      }\n    } catch (err) {\n      setError('Failed to process the PDF');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>PDF Redaction Tool</h1>\n      </header>\n\n      <main>\n        <form onSubmit={handleSubmit}>\n          <div className=\"file-input\">\n            <input\n              type=\"file\"\n              accept=\".pdf\"\n              onChange={handleFileChange}\n            />\n          </div>\n          <button type=\"submit\" disabled={!file || loading}>\n            {loading ? 'Processing...' : 'Redact PDF'}\n          </button>\n        </form>\n\n        {error && <div className=\"error\">{error}</div>}\n\n        {redactedText && (\n          <div className=\"results\">\n            {totalRedactions && (\n              <div className=\"redaction-summary\">\n                <h2>Redaction Summary:</h2>\n                <p className=\"redaction-stats\">\n                  {formatRedactionStats(totalRedactions) || 'No sensitive information detected'}\n                </p>\n                <p className=\"redaction-info\">\n                  The system has scanned for and redacted: personal names, email addresses, phone numbers,\n                  social security numbers, credit card numbers, dates, addresses, company names, financial information,\n                  IDs (passports, driver's licenses), and network information (IP addresses).\n                </p>\n              </div>\n            )}\n\n            <h2>Redacted Text:</h2>\n            {redactedText.map((page, index) => (\n              <div key={index} className=\"page\">\n                <h3>Page {index + 1}</h3>\n                {redactionStats && redactionStats[index] && (\n                  <div className=\"page-stats\">\n                    <p><strong>Page Redactions:</strong> {formatRedactionStats(redactionStats[index])}</p>\n                  </div>\n                )}\n                <pre>{page}</pre>\n              </div>\n            ))}\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}